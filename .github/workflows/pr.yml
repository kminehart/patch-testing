# This is a basic workflow to help you get started with Actions
name: Sync and run PR tests

# Controls when the workflow will run
on:
  # Triggers the workflow on pull requests
  pull_request: {}
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  if: github.repository == 'kminehart/patch-testing'
  # This workflow contains a single job called "build"
  apply-patches-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
        # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
        # `apply.sh` uses `git am`, which applies git patches as commits.
        # creating commits requires the git config to be set with user.name and user.email.
      - name: git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Checkout active patches
        uses: actions/checkout@v3
        with:
          repository: kminehart/patches
          path: patches
      # Silently the patches onto the current git repo
      - name: Apply patches
        run: ./patches/apply.sh ${{ github.event.pull_request.base.ref }}
        id: patches
      - name: Handle patch failure
        if: ${{ failure() && steps.patches.conclusion == 'failure' }}
        run: echo "::error title='Failed to apply patches'::Your pull request is not compatible with active patches. See the documentation here for how to resolve this error."
      - name: Test
        run: go test ./...
